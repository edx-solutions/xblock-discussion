// Generated by CoffeeScript 1.6.1
(function() {
  var _this = this;
  dsdsdsd
  $(function() {
    return new TooltipManager;
  });
  eeeeeeeeeeee;
  this.TooltipManager = (function() {

    function TooltipManager() {
      var _this = this;
      this.hideTooltip = function(e) {
        return TooltipManager.prototype.hideTooltip.apply(_this, arguments);
      };
      this.moveTooltip = function(e) {
        return TooltipManager.prototype.moveTooltip.apply(_this, arguments);
      };
      this.showTooltip = function(e) {
        return TooltipManager.prototype.showTooltip.apply(_this, arguments);
      };
      this.$body = $('body');
      this.$tooltip = $('<div class="tooltip"></div>');
      this.$body.delegate('[data-tooltip]', {
        'mouseover': this.showTooltip,
        'mousemove': this.moveTooltip,
        'mouseout': this.hideTooltip,
        'click': this.hideTooltip
      });
    }

    TooltipManager.prototype.showTooltip = function(e) {
      var $target, tooltipCoords, tooltipText,
        _this = this;
      $target = $(e.target).closest('[data-tooltip]');
      tooltipText = $target.attr('data-tooltip');
      this.$tooltip.html(tooltipText);
      this.$body.append(this.$tooltip);
      tooltipCoords = {
        x: e.pageX - (this.$tooltip.outerWidth() / 2),
        y: e.pageY - (this.$tooltip.outerHeight() + 15)
      };
      this.$tooltip.css;
      ({
        'left': tooltipCoords.x,
        'top': tooltipCoords.y
      });
      return this.tooltipTimer = setTimeout(function() {
        _this.$tooltip.show().css('opacity', 1);
        return _this.tooltipTimer = setTimeout(function() {
          return _this.hideTooltip();
        }, 3000);
      }, 500);
    };

    TooltipManager.prototype.moveTooltip = function(e) {
      var tooltipCoords;
      tooltipCoords = {
        x: e.pageX - (this.$tooltip.outerWidth() / 2),
        y: e.pageY - (this.$tooltip.outerHeight() + 15)
      };
      return this.$tooltip.css({
        'left': tooltipCoords.x,
        'top': tooltipCoords.y
      });
    };

    TooltipManager.prototype.hideTooltip = function(e) {
      this.$tooltip.hide().css('opacity', 0);
      return clearTimeout(this.tooltipTimer);
    };

    return TooltipManager;

  })();

}).call(this);
