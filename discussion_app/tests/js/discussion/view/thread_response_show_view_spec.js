// Generated by CoffeeScript 1.6.1
(function() {

  describe("ThreadResponseShowView", function() {
    beforeEach(function() {
      setFixtures("<div class=\"discussion-post\">\n    <a href=\"#\" class=\"vote-btn\" data-tooltip=\"vote\" role=\"button\" aria-pressed=\"false\">\n        <span class=\"plus-icon\"/><span class=\"votes-count-number\">0</span> <span class=\"sr\">votes (click to vote)</span>\n    </a>\n</div>");
      this.commentData = {
        id: "dummy",
        user_id: "567",
        course_id: "TestOrg/TestCourse/TestRun",
        body: "this is a comment",
        created_at: "2013-04-03T20:08:39Z",
        abuse_flaggers: [],
        votes: {
          up_count: "42"
        }
      };
      this.comment = new Comment(this.commentData);
      this.view = new ThreadResponseShowView({
        model: this.comment
      });
      this.view.setElement($(".discussion-post"));
      return window.user = new DiscussionUser({
        id: "567",
        upvoted_ids: []
      });
    });
    it("renders the vote correctly", function() {
      return DiscussionViewSpecHelper.checkRenderVote(this.view, this.comment);
    });
    it("votes correctly", function() {
      return DiscussionViewSpecHelper.checkVote(this.view, this.comment, this.commentData, true);
    });
    it("unvotes correctly", function() {
      return DiscussionViewSpecHelper.checkUnvote(this.view, this.comment, this.commentData, true);
    });
    it('toggles the vote correctly', function() {
      return DiscussionViewSpecHelper.checkToggleVote(this.view, this.comment);
    });
    return it("vote button activates on appropriate events", function() {
      return DiscussionViewSpecHelper.checkVoteButtonEvents(this.view);
    });
  });

}).call(this);
