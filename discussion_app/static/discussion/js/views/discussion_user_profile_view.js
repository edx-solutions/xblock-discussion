// Generated by CoffeeScript 1.6.3
(function() {
  var _ref,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; },
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  if (typeof Backbone !== "undefined" && Backbone !== null) {
    this.DiscussionUserProfileView = (function(_super) {
      __extends(DiscussionUserProfileView, _super);

      function DiscussionUserProfileView() {
        this.render = __bind(this.render, this);
        _ref = DiscussionUserProfileView.__super__.constructor.apply(this, arguments);
        return _ref;
      }

      DiscussionUserProfileView.prototype.events = {
        "click .discussion-paginator a": "changePage"
      };

      DiscussionUserProfileView.prototype.initialize = function(options) {
        DiscussionUserProfileView.__super__.initialize.call(this);
        this.page = options.page;
        this.numPages = options.numPages;
        this.discussion = new Discussion();
        this.discussion.on("reset", this.render);
        return this.discussion.reset(this.collection, {
          silent: false
        });
      };

      DiscussionUserProfileView.prototype.render = function() {
        var baseUri, pageUrlFunc, paginationParams, paginationTemplate, profileTemplate;
        profileTemplate = $("script#_user_profile").html();
        this.$el.html(Mustache.render(profileTemplate, {
          threads: this.discussion.models
        }));
        this.discussion.map(function(thread) {
          return new DiscussionThreadProfileView({
            el: this.$("article#thread_" + thread.id),
            model: thread
          }).render();
        });
        baseUri = URI(window.location).removeSearch("page");
        pageUrlFunc = function(page) {
          return baseUri.clone().addSearch("page", page);
        };
        paginationParams = DiscussionUtil.getPaginationParams(this.page, this.numPages, pageUrlFunc);
        paginationTemplate = $("script#_pagination").html();
        return this.$el.find(".pagination").html(Mustache.render(paginationTemplate, paginationParams));
      };

      DiscussionUserProfileView.prototype.changePage = function(event) {
        var url,
          _this = this;
        event.preventDefault();
        url = $(event.target).attr("href");
        return DiscussionUtil.safeAjax({
          $elem: this.$el,
          $loading: $(event.target),
          takeFocus: true,
          url: url,
          type: "GET",
          dataType: "json",
          success: function(response, textStatus, xhr) {
            _this.page = response.page;
            _this.numPages = response.num_pages;
            _this.discussion.reset(response.discussion_data, {
              silent: false
            });
            return history.pushState({}, "", url);
          },
          error: function() {
            return DiscussionUtil.discussionAlert(gettext("Sorry"), gettext("We had some trouble loading the page you requested. Please try again."));
          }
        });
      };

      return DiscussionUserProfileView;

    })(Backbone.View);
  }

}).call(this);
